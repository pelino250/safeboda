openapi: 3.0.3
info:
  title: SafeBoda Api
  version: 1.0.0
  description: Moto taxi API
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/passengers/:
    get:
      operationId: api_v1_passengers_list
      description: |-
        ViewSet for managing Passenger instances.
        Provides CRUD operations for passenger profiles.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Passenger'
          description: ''
    post:
      operationId: api_v1_passengers_create
      description: |-
        ViewSet for managing Passenger instances.
        Provides CRUD operations for passenger profiles.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Passenger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Passenger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Passenger'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
  /api/v1/passengers/{id}/:
    get:
      operationId: api_v1_passengers_retrieve
      description: |-
        ViewSet for managing Passenger instances.
        Provides CRUD operations for passenger profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this passenger.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
    put:
      operationId: api_v1_passengers_update
      description: |-
        ViewSet for managing Passenger instances.
        Provides CRUD operations for passenger profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this passenger.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Passenger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Passenger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Passenger'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
    patch:
      operationId: api_v1_passengers_partial_update
      description: |-
        ViewSet for managing Passenger instances.
        Provides CRUD operations for passenger profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this passenger.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPassenger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPassenger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPassenger'
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
    delete:
      operationId: api_v1_passengers_destroy
      description: |-
        ViewSet for managing Passenger instances.
        Provides CRUD operations for passenger profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this passenger.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/passengers/my_profile/:
    get:
      operationId: api_v1_passengers_my_profile_retrieve
      description: Get the current user's passenger profile.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
          description: ''
  /api/v1/riders/:
    get:
      operationId: api_v1_riders_list
      description: |-
        ViewSet for managing Rider instances.
        Provides CRUD operations for rider profiles.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rider'
          description: ''
    post:
      operationId: api_v1_riders_create
      description: |-
        ViewSet for managing Rider instances.
        Provides CRUD operations for rider profiles.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rider'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
  /api/v1/riders/{id}/:
    get:
      operationId: api_v1_riders_retrieve
      description: |-
        ViewSet for managing Rider instances.
        Provides CRUD operations for rider profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rider.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
    put:
      operationId: api_v1_riders_update
      description: |-
        ViewSet for managing Rider instances.
        Provides CRUD operations for rider profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rider.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Rider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Rider'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
    patch:
      operationId: api_v1_riders_partial_update
      description: |-
        ViewSet for managing Rider instances.
        Provides CRUD operations for rider profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rider.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRider'
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
    delete:
      operationId: api_v1_riders_destroy
      description: |-
        ViewSet for managing Rider instances.
        Provides CRUD operations for rider profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rider.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/riders/{id}/update_location/:
    patch:
      operationId: api_v1_riders_update_location_partial_update
      description: Update rider's current location.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rider.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRider'
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
  /api/v1/riders/available_riders/:
    get:
      operationId: api_v1_riders_available_riders_retrieve
      description: |-
        Get all available riders for passengers to see.
        Uses Redis caching with 5-minute timeout.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
  /api/v1/riders/my_profile/:
    get:
      operationId: api_v1_riders_my_profile_retrieve
      description: Get the current user's rider profile.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rider'
          description: ''
  /api/v1/uas/account/recover/:
    post:
      operationId: api_v1_uas_account_recover_create
      description: Account recovery endpoint for locked accounts.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/uas/account/status/:
    get:
      operationId: api_v1_uas_account_status_retrieve
      description: Account verification status endpoint.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/uas/districts/:
    get:
      operationId: api_v1_uas_districts_list
      description: Rwanda districts list endpoint.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/District'
          description: ''
  /api/v1/uas/password-reset/:
    post:
      operationId: api_v1_uas_password_reset_create
      description: Password reset request endpoint.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/uas/password-reset/confirm/:
    post:
      operationId: api_v1_uas_password_reset_confirm_create
      description: Password reset confirmation endpoint.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/uas/register/:
    post:
      operationId: api_v1_uas_register_create
      description: Register a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/v1/uas/verify-email/:
    post:
      operationId: api_v1_uas_verify_email_create
      description: Verify email
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerification'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerification'
          description: ''
  /api/v1/uas/verify-phone/:
    post:
      operationId: api_v1_uas_verify_phone_create
      description: Phone verification endpoint.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      description: |-
        ViewSet for managing User instances.
        Provides CRUD operations for users.
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_v1_users_create
      description: |-
        ViewSet for managing User instances.
        Provides CRUD operations for users.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: api_v1_users_retrieve
      description: |-
        ViewSet for managing User instances.
        Provides CRUD operations for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_users_update
      description: |-
        ViewSet for managing User instances.
        Provides CRUD operations for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_users_partial_update
      description: |-
        ViewSet for managing User instances.
        Provides CRUD operations for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_users_destroy
      description: |-
        ViewSet for managing User instances.
        Provides CRUD operations for users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    District:
      type: object
      description: Serializer for Rwanda districts.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        code:
          type: string
          readOnly: true
        province:
          type: string
          readOnly: true
      required:
      - code
      - id
      - name
      - province
    EmailVerification:
      type: object
      description: Serializer for email verification.
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          maxLength: 6
      required:
      - code
      - email
    Passenger:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        passenger_id:
          type: string
          maxLength: 10
        preferred_payment_method:
          type: string
          maxLength: 10
        home_address:
          type: string
          maxLength: 100
        profile_picture:
          type: string
          format: uri
          nullable: true
        preferred_language:
          type: string
          maxLength: 30
        emergency_contact:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        is_verified:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - home_address
      - id
      - passenger_id
      - updated_at
      - user
    PatchedPassenger:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        passenger_id:
          type: string
          maxLength: 10
        preferred_payment_method:
          type: string
          maxLength: 10
        home_address:
          type: string
          maxLength: 100
        profile_picture:
          type: string
          format: uri
          nullable: true
        preferred_language:
          type: string
          maxLength: 30
        emergency_contact:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        is_verified:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        license_number:
          type: string
          maxLength: 10
        license_picture:
          type: string
          format: uri
          nullable: true
        id_number_picture:
          type: string
          format: uri
          nullable: true
        verification_status:
          type: string
          maxLength: 20
        verification_notes:
          type: string
          nullable: true
        is_available:
          type: boolean
        current_latitude:
          type: string
          nullable: true
          maxLength: 100
        current_longitude:
          type: string
          nullable: true
          maxLength: 100
        average_rating:
          type: number
          format: double
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
    Rider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        license_number:
          type: string
          maxLength: 10
        license_picture:
          type: string
          format: uri
          nullable: true
        id_number_picture:
          type: string
          format: uri
          nullable: true
        verification_status:
          type: string
          maxLength: 20
        verification_notes:
          type: string
          nullable: true
        is_available:
          type: boolean
        current_latitude:
          type: string
          nullable: true
          maxLength: 100
        current_longitude:
          type: string
          nullable: true
          maxLength: 100
        average_rating:
          type: number
          format: double
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - average_rating
      - created_at
      - id
      - license_number
      - updated_at
      - user
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
      required:
      - email
      - id
      - user_type
    UserRegistration:
      type: object
      description: Serializer for user registration.
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
      required:
      - email
      - password
      - password_confirm
      - user_type
    UserTypeEnum:
      enum:
      - passenger
      - rider
      type: string
      description: |-
        * `passenger` - Passenger
        * `rider` - Rider
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
